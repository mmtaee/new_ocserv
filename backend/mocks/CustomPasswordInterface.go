// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// CustomPasswordInterface is an autogenerated mock type for the CustomPasswordInterface type
type CustomPasswordInterface struct {
	mock.Mock
}

// Check provides a mock function with given fields: passwd, hashedPassword, salt
func (_m *CustomPasswordInterface) Check(passwd string, hashedPassword string, salt string) bool {
	ret := _m.Called(passwd, hashedPassword, salt)

	if len(ret) == 0 {
		panic("no return value specified for Check")
	}

	var r0 bool
	if rf, ok := ret.Get(0).(func(string, string, string) bool); ok {
		r0 = rf(passwd, hashedPassword, salt)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// Create provides a mock function with given fields: passwd, salt
func (_m *CustomPasswordInterface) Create(passwd string, salt string) string {
	ret := _m.Called(passwd, salt)

	if len(ret) == 0 {
		panic("no return value specified for Create")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func(string, string) string); ok {
		r0 = rf(passwd, salt)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// Salt provides a mock function with given fields: length
func (_m *CustomPasswordInterface) Salt(length int) string {
	ret := _m.Called(length)

	if len(ret) == 0 {
		panic("no return value specified for Salt")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func(int) string); ok {
		r0 = rf(length)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// NewCustomPasswordInterface creates a new instance of CustomPasswordInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCustomPasswordInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *CustomPasswordInterface {
	mock := &CustomPasswordInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
