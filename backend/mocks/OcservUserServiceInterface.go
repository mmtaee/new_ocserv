// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// OcservUserServiceInterface is an autogenerated mock type for the OcservUserServiceInterface type
type OcservUserServiceInterface struct {
	mock.Mock
}

// CreateUser provides a mock function with given fields: ctx, username, password, group
func (_m *OcservUserServiceInterface) CreateUser(ctx context.Context, username string, password string, group ...string) error {
	_va := make([]interface{}, len(group))
	for _i := range group {
		_va[_i] = group[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, username, password)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for CreateUser")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string, ...string) error); ok {
		r0 = rf(ctx, username, password, group...)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewOcservUserServiceInterface creates a new instance of OcservUserServiceInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewOcservUserServiceInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *OcservUserServiceInterface {
	mock := &OcservUserServiceInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
